/**:
    ros__parameters:
      # Topics
      pointCloudTopic: "livox/lidar"              # Point cloud data
      imuTopic: "dog_imu_raw"                     # IMU data
      odomTopic: "odometry/imu"                   # IMU pre-preintegration odometry, same frequency as IMU
      gpsTopic: "odometry/gpsz"                   # GPS odometry topic from navsat, see module_navsat.launch file

      # Frames
      robotFrame: "robot_center"
      lidarFrame: "base_link"
      baselinkFrame: "base_link"
      odometryFrame: "odom"
      mapFrame: "map"
      robot_id: "robot"

      # GPS Settings
      useImuHeadingInitialization: true           # if using GPS data, set to "true"
      useGpsElevation: false                      # if GPS elevation is bad, set to "false"
      gpsCovThreshold: 2.0                        # m^2, threshold for using GPS data
      poseCovThreshold: 25.0                      # m^2, threshold for using GPS data
      
      # Export settings
      savePCD: true                               
      savePCDDirectory: "/unitree/module/graph_pid_ws/src/task/maps/pcd/"        # in your home folder, starts and ends with "/". Warning: the code deletes "LOAM" folder then recreates it. See "mapOptimization" for implementation
      # Sensor Settings
      sensor: mid360                            # lidar sensor type, either 'velodyne' or 'ouster'   添加 ‘robosense’‘xt16’‘mid360’‘helios32’‘xt32’
      lidarYsn: "47PGOEW0020275"               #"47PGO440010032" livox    "AW3HFG53903HFI51" 47PGP120020023
      N_SCAN: 4                                # number of lidar channel (i.e., 16, 32, 64, 128)
      Horizon_SCAN: 5000                       # lidar horizontal resolution (Velodyne:1800, Ouster:512,1024,2048, xt16:2000, mid360:5000, helios32:1800, xt32:2000/10Hz 1000/20Hz)
      timeField: "time"                        # point timestamp field, Velodyne - "time", Ouster - "t"
      downsampleRate: 1                        # default: 1. Downsample your data if too many points. i.e., 16 = 64 / 4, 16 = 16 / 1 
      lidarMinRange: 0.2                       #  default: 1. add by zzr 2220728
      lidarMaxRange: 30.0
      inversion: false                            # whether lidar upside down
      lidarPose: [0.0, 0.0, 0.0, 0.0, 13.0, 0.0]                   # xyzrpy m m m deg deg deg

      #Point cloud removal around the back of dog's body
      removeWidth: 0.1 # Half the actual width
      removeHeight: 0.3

      # IMU Settings
      imuAccNoise: 3.9939570888238808e-03
      imuGyrNoise: 1.5636343949698187e-03
      imuAccBiasN: 6.4356659353532566e-05
      imuGyrBiasN: 3.5640318696367613e-05
      imuGravity: 9.80511
      imuRPYWeight: 0.01

      imuTimeDelay: 0.0

      # Extrinsics (lidar -> IMU)
      extrinsicTrans: [-0.16, 0.0, -0.13] #mid360雷达
      extrinsicRot: [1.0, 0.0, 0.0,
                     0.0, 1.0, 0.0,
                     0.0, 0.0, 1.0]                    
      extrinsicRPY: [1.0, 0.0, 0.0,
                     0.0, 1.0, 0.0,
                     0.0, 0.0, 1.0]

      # LOAM feature threshold
      edgeThreshold: 1.0
      surfThreshold: 0.1
      edgeFeatureMinValidNum: 10
      surfFeatureMinValidNum: 100

      # voxel filter paprams
      odometrySurfLeafSize: 0.2                     # default: 0.4
      mappingCornerLeafSize: 0.05                    # default: 0.2
      mappingSurfLeafSize: 0.2                      # default: 0.4

      # robot motion constraint (in case you are using a 2D robot)
      z_tollerance: 1000.0                            # meters
      rotation_tollerance: 1000.0                     # radians

      # relocation__tollerance add by zzr 20220809
      re_position_tollerance: 2.0
      re_angle_tollerance: 1.0    #0.2-0.4
      re_score_tollerance: 0.3

      # IMU to Lidar add by zzr 20220809
      imuTolidar: [-0.16, 0.0, -0.13] 

      # CPU Params
      numberOfCores: 8                             # number of cores for mapping optimization
      mappingProcessInterval: 0.10                  # seconds, regulate mapping frequency

      # Surrounding map
      surroundingkeyframeAddingDistThreshold: 1.0   # meters, regulate keyframe adding threshold  调节关键帧添加阈值 1.0
      surroundingkeyframeAddingAngleThreshold: 0.2  # radians, regulate keyframe adding threshold 0.2
      surroundingKeyframeDensity: 2.0               # meters, downsample surrounding keyframe poses   周围关键帧密度 2.0
      surroundingKeyframeSearchRadius: 50.0         # meters, within n meters scan-to-map optimization (when loop closure disabled) 20

      # Loop closure
      loopClosureEnableFlag: true   #true
      loopClosureFrequency: 1.0
      surroundingKeyframeSize: 50                   # submap size (when loop closure enabled)
      historyKeyframeSearchRadius: 15.0           # meters, key frame that is within n meters from current pose will be considerd for loop closure
      historyKeyframeSearchTimeDiff: 30.0           # seconds, key frame that is n seconds older will be considered for loop closure
      historyKeyframeSearchNum: 25                  # number of hostory key frames will be fused into a submap for loop closure
      historyKeyframeFitnessScore: 0.3              # icp threshold, the smaller the better alignment

      # Visualization
      globalMapVisualizationSearchRadius: 1000.0    # meters, global map visualization radius
      globalMapVisualizationPoseDensity: 10.0       # meters, global map visualization keyframe density
      globalMapVisualizationLeafSize: 1.0           # meters, global map visualization cloud density

      multiple_floors: false

      # grid map
      gridResolutionX: 15
      gridResolutionY: 15
      nearbyMethod: NEARBY8       # CENTER:只考虑中心  NEARBY4：上下左右   NEARBY8：上下左右+四角
